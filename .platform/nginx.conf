; user                    nginx;
; error_log               /var/log/nginx/error.log warn;
; pid                     /var/run/nginx.pid;
; worker_processes        auto;
; worker_rlimit_nofile    33282;
;
; events {
;     use epoll;
;     worker_connections  1024;
;     multi_accept on;
; }
;
; http {
;   client_body_temp_path /tmp/nginx/body;
;   include       /etc/nginx/mime.types;
;   default_type  application/octet-stream;
;
; ;   types_hash_max_size 1024M;  # types_hash_max_size 값을 2048로 증가
;   types_hash_bucket_size 64M;  # types_hash_bucket_size 값을 128로 증가
; ;   client_max_body_size 50M;
;   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
;                     '$status $body_bytes_sent "$http_referer" '
;                     '"$http_user_agent" "$http_x_forwarded_for"';
;
;   include       conf.d/*.conf;
;
;   map $http_upgrade $connection_upgrade {
;       default     "upgrade";
;   }
;
;   upstream springboot {
;     server 127.0.0.1:5000;
;     keepalive 1024;
;     types_hash_max_size 4096;
;     types_hash_bucket_size 268;
;   }
;
;   server {
;       listen        80 default_server;
;       listen        [::]:80 default_server;
;
;       client_max_body_size 1024M;  # 파일 업로드 제한을 1024MB로 설정
;
;       location / {
;           proxy_pass          http://springboot;
;           proxy_http_version  1.1;
;           proxy_set_header    Connection          $connection_upgrade;
;           proxy_set_header    Upgrade             $http_upgrade;
;
;           proxy_set_header    Host                $host;
;           proxy_set_header    X-Real-IP           $remote_addr;
;           proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
;       }
;
;       location /actuator/health {
;           proxy_pass          http://springboot/actuator/health;  # Spring Boot 애플리케이션의 헬스 체크 엔드포인트
;           proxy_set_header    Host                $host;
;           proxy_set_header    X-Real-IP           $remote_addr;
;           proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
;           proxy_set_header    X-Forwarded-Proto   $scheme;
;       }
;
;       access_log    /var/log/nginx/access.log main;
;
;       client_header_timeout 60;
;       client_body_timeout   60;
;       keepalive_timeout     60;
;       gzip                  off;
;       gzip_comp_level       4;
;
;       # Include the Elastic Beanstalk generated locations
;       include conf.d/elasticbeanstalk/healthd.conf;
;   }
; }

user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    33282;

events {
    use epoll;
    worker_connections  1024;
    multi_accept on;
}

http {
  client_body_temp_path /tmp/nginx/body;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  types_hash_max_size 1024M;  # types_hash_max_size 값을 2048로 증가
  types_hash_bucket_size 64M;  # types_hash_bucket_size 값을 128로 증가
  client_max_body_size 50M;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  include       conf.d/*.conf;

  map $http_upgrade $connection_upgrade {
      default     "upgrade";
  }

  upstream springboot {
    server 127.0.0.1:5000;
    keepalive 1024;
    types_hash_max_size 4096;
    types_hash_bucket_size 268;
  }

  server {
      listen        80 default_server;
      listen        [::]:80 default_server;

      client_max_body_size 1024M;  # 파일 업로드 제한을 1024MB로 설정

      location / {
          proxy_pass          http://springboot;
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;

          proxy_set_header    Host                $host;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      }

      location /actuator/health {
          proxy_pass          http://springboot/actuator/health;  # Spring Boot 애플리케이션의 헬스 체크 엔드포인트
          proxy_set_header    Host                $host;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Proto   $scheme;
      }

      access_log    /var/log/nginx/access.log main;

      client_header_timeout 60;
      client_body_timeout   60;
      keepalive_timeout     60;
      gzip                  off;
      gzip_comp_level       4;

      # Include the Elastic Beanstalk generated locations
      include conf.d/elasticbeanstalk/healthd.conf;
  }
}
